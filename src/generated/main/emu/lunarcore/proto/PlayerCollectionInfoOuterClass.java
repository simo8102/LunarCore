// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerCollectionInfoOuterClass {
  /**
   * Protobuf type {@code PlayerCollectionInfo}
   */
  public static final class PlayerCollectionInfo extends ProtoMessage<PlayerCollectionInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 OPKIPBKCHHK = 6;</code>
     */
    private int oPKIPBKCHHK;

    /**
     * <code>optional uint32 HFMNHPOGANN = 9;</code>
     */
    private int hFMNHPOGANN;

    /**
     * <code>optional uint32 APBMGEBOHPK = 10;</code>
     */
    private int aPBMGEBOHPK;

    /**
     * <code>optional uint32 FOLOHMFJFLM = 12;</code>
     */
    private int fOLOHMFJFLM;

    /**
     * <code>optional uint32 JBADNDDCGFK = 15;</code>
     */
    private int jBADNDDCGFK;

    private PlayerCollectionInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerCollectionInfo}
     */
    public static PlayerCollectionInfo newInstance() {
      return new PlayerCollectionInfo();
    }

    /**
     * <code>optional uint32 OPKIPBKCHHK = 6;</code>
     * @return whether the oPKIPBKCHHK field is set
     */
    public boolean hasOPKIPBKCHHK() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 OPKIPBKCHHK = 6;</code>
     * @return this
     */
    public PlayerCollectionInfo clearOPKIPBKCHHK() {
      bitField0_ &= ~0x00000001;
      oPKIPBKCHHK = 0;
      return this;
    }

    /**
     * <code>optional uint32 OPKIPBKCHHK = 6;</code>
     * @return the oPKIPBKCHHK
     */
    public int getOPKIPBKCHHK() {
      return oPKIPBKCHHK;
    }

    /**
     * <code>optional uint32 OPKIPBKCHHK = 6;</code>
     * @param value the oPKIPBKCHHK to set
     * @return this
     */
    public PlayerCollectionInfo setOPKIPBKCHHK(final int value) {
      bitField0_ |= 0x00000001;
      oPKIPBKCHHK = value;
      return this;
    }

    /**
     * <code>optional uint32 HFMNHPOGANN = 9;</code>
     * @return whether the hFMNHPOGANN field is set
     */
    public boolean hasHFMNHPOGANN() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 HFMNHPOGANN = 9;</code>
     * @return this
     */
    public PlayerCollectionInfo clearHFMNHPOGANN() {
      bitField0_ &= ~0x00000002;
      hFMNHPOGANN = 0;
      return this;
    }

    /**
     * <code>optional uint32 HFMNHPOGANN = 9;</code>
     * @return the hFMNHPOGANN
     */
    public int getHFMNHPOGANN() {
      return hFMNHPOGANN;
    }

    /**
     * <code>optional uint32 HFMNHPOGANN = 9;</code>
     * @param value the hFMNHPOGANN to set
     * @return this
     */
    public PlayerCollectionInfo setHFMNHPOGANN(final int value) {
      bitField0_ |= 0x00000002;
      hFMNHPOGANN = value;
      return this;
    }

    /**
     * <code>optional uint32 APBMGEBOHPK = 10;</code>
     * @return whether the aPBMGEBOHPK field is set
     */
    public boolean hasAPBMGEBOHPK() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 APBMGEBOHPK = 10;</code>
     * @return this
     */
    public PlayerCollectionInfo clearAPBMGEBOHPK() {
      bitField0_ &= ~0x00000004;
      aPBMGEBOHPK = 0;
      return this;
    }

    /**
     * <code>optional uint32 APBMGEBOHPK = 10;</code>
     * @return the aPBMGEBOHPK
     */
    public int getAPBMGEBOHPK() {
      return aPBMGEBOHPK;
    }

    /**
     * <code>optional uint32 APBMGEBOHPK = 10;</code>
     * @param value the aPBMGEBOHPK to set
     * @return this
     */
    public PlayerCollectionInfo setAPBMGEBOHPK(final int value) {
      bitField0_ |= 0x00000004;
      aPBMGEBOHPK = value;
      return this;
    }

    /**
     * <code>optional uint32 FOLOHMFJFLM = 12;</code>
     * @return whether the fOLOHMFJFLM field is set
     */
    public boolean hasFOLOHMFJFLM() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 FOLOHMFJFLM = 12;</code>
     * @return this
     */
    public PlayerCollectionInfo clearFOLOHMFJFLM() {
      bitField0_ &= ~0x00000008;
      fOLOHMFJFLM = 0;
      return this;
    }

    /**
     * <code>optional uint32 FOLOHMFJFLM = 12;</code>
     * @return the fOLOHMFJFLM
     */
    public int getFOLOHMFJFLM() {
      return fOLOHMFJFLM;
    }

    /**
     * <code>optional uint32 FOLOHMFJFLM = 12;</code>
     * @param value the fOLOHMFJFLM to set
     * @return this
     */
    public PlayerCollectionInfo setFOLOHMFJFLM(final int value) {
      bitField0_ |= 0x00000008;
      fOLOHMFJFLM = value;
      return this;
    }

    /**
     * <code>optional uint32 JBADNDDCGFK = 15;</code>
     * @return whether the jBADNDDCGFK field is set
     */
    public boolean hasJBADNDDCGFK() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 JBADNDDCGFK = 15;</code>
     * @return this
     */
    public PlayerCollectionInfo clearJBADNDDCGFK() {
      bitField0_ &= ~0x00000010;
      jBADNDDCGFK = 0;
      return this;
    }

    /**
     * <code>optional uint32 JBADNDDCGFK = 15;</code>
     * @return the jBADNDDCGFK
     */
    public int getJBADNDDCGFK() {
      return jBADNDDCGFK;
    }

    /**
     * <code>optional uint32 JBADNDDCGFK = 15;</code>
     * @param value the jBADNDDCGFK to set
     * @return this
     */
    public PlayerCollectionInfo setJBADNDDCGFK(final int value) {
      bitField0_ |= 0x00000010;
      jBADNDDCGFK = value;
      return this;
    }

    @Override
    public PlayerCollectionInfo copyFrom(final PlayerCollectionInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        oPKIPBKCHHK = other.oPKIPBKCHHK;
        hFMNHPOGANN = other.hFMNHPOGANN;
        aPBMGEBOHPK = other.aPBMGEBOHPK;
        fOLOHMFJFLM = other.fOLOHMFJFLM;
        jBADNDDCGFK = other.jBADNDDCGFK;
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final PlayerCollectionInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasOPKIPBKCHHK()) {
        setOPKIPBKCHHK(other.oPKIPBKCHHK);
      }
      if (other.hasHFMNHPOGANN()) {
        setHFMNHPOGANN(other.hFMNHPOGANN);
      }
      if (other.hasAPBMGEBOHPK()) {
        setAPBMGEBOHPK(other.aPBMGEBOHPK);
      }
      if (other.hasFOLOHMFJFLM()) {
        setFOLOHMFJFLM(other.fOLOHMFJFLM);
      }
      if (other.hasJBADNDDCGFK()) {
        setJBADNDDCGFK(other.jBADNDDCGFK);
      }
      return this;
    }

    @Override
    public PlayerCollectionInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      oPKIPBKCHHK = 0;
      hFMNHPOGANN = 0;
      aPBMGEBOHPK = 0;
      fOLOHMFJFLM = 0;
      jBADNDDCGFK = 0;
      return this;
    }

    @Override
    public PlayerCollectionInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerCollectionInfo)) {
        return false;
      }
      PlayerCollectionInfo other = (PlayerCollectionInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasOPKIPBKCHHK() || oPKIPBKCHHK == other.oPKIPBKCHHK)
        && (!hasHFMNHPOGANN() || hFMNHPOGANN == other.hFMNHPOGANN)
        && (!hasAPBMGEBOHPK() || aPBMGEBOHPK == other.aPBMGEBOHPK)
        && (!hasFOLOHMFJFLM() || fOLOHMFJFLM == other.fOLOHMFJFLM)
        && (!hasJBADNDDCGFK() || jBADNDDCGFK == other.jBADNDDCGFK);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(oPKIPBKCHHK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 72);
        output.writeUInt32NoTag(hFMNHPOGANN);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 80);
        output.writeUInt32NoTag(aPBMGEBOHPK);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(fOLOHMFJFLM);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 120);
        output.writeUInt32NoTag(jBADNDDCGFK);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(oPKIPBKCHHK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(hFMNHPOGANN);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(aPBMGEBOHPK);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(fOLOHMFJFLM);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jBADNDDCGFK);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerCollectionInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 48: {
            // oPKIPBKCHHK
            oPKIPBKCHHK = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 72) {
              break;
            }
          }
          case 72: {
            // hFMNHPOGANN
            hFMNHPOGANN = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // aPBMGEBOHPK
            aPBMGEBOHPK = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // fOLOHMFJFLM
            fOLOHMFJFLM = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 120) {
              break;
            }
          }
          case 120: {
            // jBADNDDCGFK
            jBADNDDCGFK = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.oPKIPBKCHHK, oPKIPBKCHHK);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.hFMNHPOGANN, hFMNHPOGANN);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.aPBMGEBOHPK, aPBMGEBOHPK);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.fOLOHMFJFLM, fOLOHMFJFLM);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.jBADNDDCGFK, jBADNDDCGFK);
      }
      output.endObject();
    }

    @Override
    public PlayerCollectionInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1436262498: {
            if (input.isAtField(FieldNames.oPKIPBKCHHK)) {
              if (!input.trySkipNullValue()) {
                oPKIPBKCHHK = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1498883298: {
            if (input.isAtField(FieldNames.hFMNHPOGANN)) {
              if (!input.trySkipNullValue()) {
                hFMNHPOGANN = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1027359554: {
            if (input.isAtField(FieldNames.aPBMGEBOHPK)) {
              if (!input.trySkipNullValue()) {
                aPBMGEBOHPK = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1809610350: {
            if (input.isAtField(FieldNames.fOLOHMFJFLM)) {
              if (!input.trySkipNullValue()) {
                fOLOHMFJFLM = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -666349892: {
            if (input.isAtField(FieldNames.jBADNDDCGFK)) {
              if (!input.trySkipNullValue()) {
                jBADNDDCGFK = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerCollectionInfo clone() {
      return new PlayerCollectionInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerCollectionInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), data).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    public static PlayerCollectionInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerCollectionInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerCollectionInfo messages
     */
    public static MessageFactory<PlayerCollectionInfo> getFactory() {
      return PlayerCollectionInfoFactory.INSTANCE;
    }

    private enum PlayerCollectionInfoFactory implements MessageFactory<PlayerCollectionInfo> {
      INSTANCE;

      @Override
      public PlayerCollectionInfo create() {
        return PlayerCollectionInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName oPKIPBKCHHK = FieldName.forField("OPKIPBKCHHK");

      static final FieldName hFMNHPOGANN = FieldName.forField("HFMNHPOGANN");

      static final FieldName aPBMGEBOHPK = FieldName.forField("APBMGEBOHPK");

      static final FieldName fOLOHMFJFLM = FieldName.forField("FOLOHMFJFLM");

      static final FieldName jBADNDDCGFK = FieldName.forField("JBADNDDCGFK");
    }
  }
}
