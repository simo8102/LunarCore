// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class EntityBuffChangeInfoOuterClass {
  /**
   * Protobuf type {@code EntityBuffChangeInfo}
   */
  public static final class EntityBuffChangeInfo extends ProtoMessage<EntityBuffChangeInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 CBOEIMDHBIJ = 5;</code>
     */
    private int cBOEIMDHBIJ;

    /**
     * <code>optional uint32 entity_id = 8;</code>
     */
    private int entityId;

    /**
     * <code>optional .BuffInfo buff_change_info = 4;</code>
     */
    private final BuffInfoOuterClass.BuffInfo buffChangeInfo = BuffInfoOuterClass.BuffInfo.newInstance();

    private EntityBuffChangeInfo() {
    }

    /**
     * @return a new empty instance of {@code EntityBuffChangeInfo}
     */
    public static EntityBuffChangeInfo newInstance() {
      return new EntityBuffChangeInfo();
    }

    public boolean hasInfo() {
      return (((bitField0_ & 0x00000003)) != 0);
    }

    public EntityBuffChangeInfo clearInfo() {
      if (hasInfo()) {
        clearCBOEIMDHBIJ();
        clearBuffChangeInfo();
      }
      return this;
    }

    private void clearInfoOtherCBOEIMDHBIJ() {
      if ((((bitField0_ & 0x00000002)) != 0)) {
        clearBuffChangeInfo();
      }
    }

    private void clearInfoOtherBuffChangeInfo() {
      if ((((bitField0_ & 0x00000001)) != 0)) {
        clearCBOEIMDHBIJ();
      }
    }

    /**
     * <code>optional uint32 CBOEIMDHBIJ = 5;</code>
     * @return whether the cBOEIMDHBIJ field is set
     */
    public boolean hasCBOEIMDHBIJ() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 CBOEIMDHBIJ = 5;</code>
     * @return this
     */
    public EntityBuffChangeInfo clearCBOEIMDHBIJ() {
      bitField0_ &= ~0x00000001;
      cBOEIMDHBIJ = 0;
      return this;
    }

    /**
     * <code>optional uint32 CBOEIMDHBIJ = 5;</code>
     * @return the cBOEIMDHBIJ
     */
    public int getCBOEIMDHBIJ() {
      return cBOEIMDHBIJ;
    }

    /**
     * <code>optional uint32 CBOEIMDHBIJ = 5;</code>
     * @param value the cBOEIMDHBIJ to set
     * @return this
     */
    public EntityBuffChangeInfo setCBOEIMDHBIJ(final int value) {
      clearInfoOtherCBOEIMDHBIJ();
      bitField0_ |= 0x00000001;
      cBOEIMDHBIJ = value;
      return this;
    }

    /**
     * <code>optional uint32 entity_id = 8;</code>
     * @return whether the entityId field is set
     */
    public boolean hasEntityId() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 entity_id = 8;</code>
     * @return this
     */
    public EntityBuffChangeInfo clearEntityId() {
      bitField0_ &= ~0x00000004;
      entityId = 0;
      return this;
    }

    /**
     * <code>optional uint32 entity_id = 8;</code>
     * @return the entityId
     */
    public int getEntityId() {
      return entityId;
    }

    /**
     * <code>optional uint32 entity_id = 8;</code>
     * @param value the entityId to set
     * @return this
     */
    public EntityBuffChangeInfo setEntityId(final int value) {
      bitField0_ |= 0x00000004;
      entityId = value;
      return this;
    }

    /**
     * <code>optional .BuffInfo buff_change_info = 4;</code>
     * @return whether the buffChangeInfo field is set
     */
    public boolean hasBuffChangeInfo() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional .BuffInfo buff_change_info = 4;</code>
     * @return this
     */
    public EntityBuffChangeInfo clearBuffChangeInfo() {
      bitField0_ &= ~0x00000002;
      buffChangeInfo.clear();
      return this;
    }

    /**
     * <code>optional .BuffInfo buff_change_info = 4;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableBuffChangeInfo()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public BuffInfoOuterClass.BuffInfo getBuffChangeInfo() {
      return buffChangeInfo;
    }

    /**
     * <code>optional .BuffInfo buff_change_info = 4;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public BuffInfoOuterClass.BuffInfo getMutableBuffChangeInfo() {
      clearInfoOtherBuffChangeInfo();
      bitField0_ |= 0x00000002;
      return buffChangeInfo;
    }

    /**
     * <code>optional .BuffInfo buff_change_info = 4;</code>
     * @param value the buffChangeInfo to set
     * @return this
     */
    public EntityBuffChangeInfo setBuffChangeInfo(final BuffInfoOuterClass.BuffInfo value) {
      clearInfoOtherBuffChangeInfo();
      bitField0_ |= 0x00000002;
      buffChangeInfo.copyFrom(value);
      return this;
    }

    @Override
    public EntityBuffChangeInfo copyFrom(final EntityBuffChangeInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        cBOEIMDHBIJ = other.cBOEIMDHBIJ;
        entityId = other.entityId;
        buffChangeInfo.copyFrom(other.buffChangeInfo);
      }
      return this;
    }

    @Override
    public EntityBuffChangeInfo mergeFrom(final EntityBuffChangeInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasCBOEIMDHBIJ()) {
        setCBOEIMDHBIJ(other.cBOEIMDHBIJ);
      }
      if (other.hasEntityId()) {
        setEntityId(other.entityId);
      }
      if (other.hasBuffChangeInfo()) {
        getMutableBuffChangeInfo().mergeFrom(other.buffChangeInfo);
      }
      return this;
    }

    @Override
    public EntityBuffChangeInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      cBOEIMDHBIJ = 0;
      entityId = 0;
      buffChangeInfo.clear();
      return this;
    }

    @Override
    public EntityBuffChangeInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      buffChangeInfo.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof EntityBuffChangeInfo)) {
        return false;
      }
      EntityBuffChangeInfo other = (EntityBuffChangeInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasCBOEIMDHBIJ() || cBOEIMDHBIJ == other.cBOEIMDHBIJ)
        && (!hasEntityId() || entityId == other.entityId)
        && (!hasBuffChangeInfo() || buffChangeInfo.equals(other.buffChangeInfo));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 40);
        output.writeUInt32NoTag(cBOEIMDHBIJ);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 64);
        output.writeUInt32NoTag(entityId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 34);
        output.writeMessageNoTag(buffChangeInfo);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(cBOEIMDHBIJ);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(entityId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(buffChangeInfo);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public EntityBuffChangeInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 40: {
            // cBOEIMDHBIJ
            clearInfoOtherCBOEIMDHBIJ();
            cBOEIMDHBIJ = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // entityId
            entityId = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 34) {
              break;
            }
          }
          case 34: {
            // buffChangeInfo
            clearInfoOtherBuffChangeInfo();
            input.readMessage(buffChangeInfo);
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.cBOEIMDHBIJ, cBOEIMDHBIJ);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.entityId, entityId);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeMessage(FieldNames.buffChangeInfo, buffChangeInfo);
      }
      output.endObject();
    }

    @Override
    public EntityBuffChangeInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1350914854: {
            if (input.isAtField(FieldNames.cBOEIMDHBIJ)) {
              if (!input.trySkipNullValue()) {
                clearInfoOtherCBOEIMDHBIJ();
                cBOEIMDHBIJ = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -2102099874:
          case -740565257: {
            if (input.isAtField(FieldNames.entityId)) {
              if (!input.trySkipNullValue()) {
                entityId = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -731204303:
          case -369384975: {
            if (input.isAtField(FieldNames.buffChangeInfo)) {
              if (!input.trySkipNullValue()) {
                clearInfoOtherBuffChangeInfo();
                input.readMessage(buffChangeInfo);
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public EntityBuffChangeInfo clone() {
      return new EntityBuffChangeInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static EntityBuffChangeInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new EntityBuffChangeInfo(), data).checkInitialized();
    }

    public static EntityBuffChangeInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new EntityBuffChangeInfo(), input).checkInitialized();
    }

    public static EntityBuffChangeInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new EntityBuffChangeInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating EntityBuffChangeInfo messages
     */
    public static MessageFactory<EntityBuffChangeInfo> getFactory() {
      return EntityBuffChangeInfoFactory.INSTANCE;
    }

    private enum EntityBuffChangeInfoFactory implements MessageFactory<EntityBuffChangeInfo> {
      INSTANCE;

      @Override
      public EntityBuffChangeInfo create() {
        return EntityBuffChangeInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName cBOEIMDHBIJ = FieldName.forField("CBOEIMDHBIJ");

      static final FieldName entityId = FieldName.forField("entityId", "entity_id");

      static final FieldName buffChangeInfo = FieldName.forField("buffChangeInfo", "buff_change_info");
    }
  }
}
