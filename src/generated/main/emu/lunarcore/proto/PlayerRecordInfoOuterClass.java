// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerRecordInfoOuterClass {
  /**
   * Protobuf type {@code PlayerRecordInfo}
   */
  public static final class PlayerRecordInfo extends ProtoMessage<PlayerRecordInfo> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional uint32 LAAOICJFOPI = 1;</code>
     */
    private int lAAOICJFOPI;

    /**
     * <code>optional uint32 PDHAFOAOMPB = 2;</code>
     */
    private int pDHAFOAOMPB;

    /**
     * <code>optional uint32 DKDINDMGEJH = 5;</code>
     */
    private int dKDINDMGEJH;

    /**
     * <code>optional uint32 BFGDPMKBHNB = 6;</code>
     */
    private int bFGDPMKBHNB;

    /**
     * <code>optional uint32 JJOHCDLEDMO = 11;</code>
     */
    private int jJOHCDLEDMO;

    /**
     * <code>optional uint32 EEJCCFCIGDF = 12;</code>
     */
    private int eEJCCFCIGDF;

    /**
     * <code>optional uint32 PNIAMOINNJF = 13;</code>
     */
    private int pNIAMOINNJF;

    /**
     * <code>optional uint32 IPOCLBEJIAF = 14;</code>
     */
    private int iPOCLBEJIAF;

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 7;</code>
     */
    private final PlayerCollectionInfoOuterClass.PlayerCollectionInfo collectionInfo = PlayerCollectionInfoOuterClass.PlayerCollectionInfo.newInstance();

    private PlayerRecordInfo() {
    }

    /**
     * @return a new empty instance of {@code PlayerRecordInfo}
     */
    public static PlayerRecordInfo newInstance() {
      return new PlayerRecordInfo();
    }

    /**
     * <code>optional uint32 LAAOICJFOPI = 1;</code>
     * @return whether the lAAOICJFOPI field is set
     */
    public boolean hasLAAOICJFOPI() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional uint32 LAAOICJFOPI = 1;</code>
     * @return this
     */
    public PlayerRecordInfo clearLAAOICJFOPI() {
      bitField0_ &= ~0x00000001;
      lAAOICJFOPI = 0;
      return this;
    }

    /**
     * <code>optional uint32 LAAOICJFOPI = 1;</code>
     * @return the lAAOICJFOPI
     */
    public int getLAAOICJFOPI() {
      return lAAOICJFOPI;
    }

    /**
     * <code>optional uint32 LAAOICJFOPI = 1;</code>
     * @param value the lAAOICJFOPI to set
     * @return this
     */
    public PlayerRecordInfo setLAAOICJFOPI(final int value) {
      bitField0_ |= 0x00000001;
      lAAOICJFOPI = value;
      return this;
    }

    /**
     * <code>optional uint32 PDHAFOAOMPB = 2;</code>
     * @return whether the pDHAFOAOMPB field is set
     */
    public boolean hasPDHAFOAOMPB() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional uint32 PDHAFOAOMPB = 2;</code>
     * @return this
     */
    public PlayerRecordInfo clearPDHAFOAOMPB() {
      bitField0_ &= ~0x00000002;
      pDHAFOAOMPB = 0;
      return this;
    }

    /**
     * <code>optional uint32 PDHAFOAOMPB = 2;</code>
     * @return the pDHAFOAOMPB
     */
    public int getPDHAFOAOMPB() {
      return pDHAFOAOMPB;
    }

    /**
     * <code>optional uint32 PDHAFOAOMPB = 2;</code>
     * @param value the pDHAFOAOMPB to set
     * @return this
     */
    public PlayerRecordInfo setPDHAFOAOMPB(final int value) {
      bitField0_ |= 0x00000002;
      pDHAFOAOMPB = value;
      return this;
    }

    /**
     * <code>optional uint32 DKDINDMGEJH = 5;</code>
     * @return whether the dKDINDMGEJH field is set
     */
    public boolean hasDKDINDMGEJH() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional uint32 DKDINDMGEJH = 5;</code>
     * @return this
     */
    public PlayerRecordInfo clearDKDINDMGEJH() {
      bitField0_ &= ~0x00000004;
      dKDINDMGEJH = 0;
      return this;
    }

    /**
     * <code>optional uint32 DKDINDMGEJH = 5;</code>
     * @return the dKDINDMGEJH
     */
    public int getDKDINDMGEJH() {
      return dKDINDMGEJH;
    }

    /**
     * <code>optional uint32 DKDINDMGEJH = 5;</code>
     * @param value the dKDINDMGEJH to set
     * @return this
     */
    public PlayerRecordInfo setDKDINDMGEJH(final int value) {
      bitField0_ |= 0x00000004;
      dKDINDMGEJH = value;
      return this;
    }

    /**
     * <code>optional uint32 BFGDPMKBHNB = 6;</code>
     * @return whether the bFGDPMKBHNB field is set
     */
    public boolean hasBFGDPMKBHNB() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional uint32 BFGDPMKBHNB = 6;</code>
     * @return this
     */
    public PlayerRecordInfo clearBFGDPMKBHNB() {
      bitField0_ &= ~0x00000008;
      bFGDPMKBHNB = 0;
      return this;
    }

    /**
     * <code>optional uint32 BFGDPMKBHNB = 6;</code>
     * @return the bFGDPMKBHNB
     */
    public int getBFGDPMKBHNB() {
      return bFGDPMKBHNB;
    }

    /**
     * <code>optional uint32 BFGDPMKBHNB = 6;</code>
     * @param value the bFGDPMKBHNB to set
     * @return this
     */
    public PlayerRecordInfo setBFGDPMKBHNB(final int value) {
      bitField0_ |= 0x00000008;
      bFGDPMKBHNB = value;
      return this;
    }

    /**
     * <code>optional uint32 JJOHCDLEDMO = 11;</code>
     * @return whether the jJOHCDLEDMO field is set
     */
    public boolean hasJJOHCDLEDMO() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional uint32 JJOHCDLEDMO = 11;</code>
     * @return this
     */
    public PlayerRecordInfo clearJJOHCDLEDMO() {
      bitField0_ &= ~0x00000010;
      jJOHCDLEDMO = 0;
      return this;
    }

    /**
     * <code>optional uint32 JJOHCDLEDMO = 11;</code>
     * @return the jJOHCDLEDMO
     */
    public int getJJOHCDLEDMO() {
      return jJOHCDLEDMO;
    }

    /**
     * <code>optional uint32 JJOHCDLEDMO = 11;</code>
     * @param value the jJOHCDLEDMO to set
     * @return this
     */
    public PlayerRecordInfo setJJOHCDLEDMO(final int value) {
      bitField0_ |= 0x00000010;
      jJOHCDLEDMO = value;
      return this;
    }

    /**
     * <code>optional uint32 EEJCCFCIGDF = 12;</code>
     * @return whether the eEJCCFCIGDF field is set
     */
    public boolean hasEEJCCFCIGDF() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional uint32 EEJCCFCIGDF = 12;</code>
     * @return this
     */
    public PlayerRecordInfo clearEEJCCFCIGDF() {
      bitField0_ &= ~0x00000020;
      eEJCCFCIGDF = 0;
      return this;
    }

    /**
     * <code>optional uint32 EEJCCFCIGDF = 12;</code>
     * @return the eEJCCFCIGDF
     */
    public int getEEJCCFCIGDF() {
      return eEJCCFCIGDF;
    }

    /**
     * <code>optional uint32 EEJCCFCIGDF = 12;</code>
     * @param value the eEJCCFCIGDF to set
     * @return this
     */
    public PlayerRecordInfo setEEJCCFCIGDF(final int value) {
      bitField0_ |= 0x00000020;
      eEJCCFCIGDF = value;
      return this;
    }

    /**
     * <code>optional uint32 PNIAMOINNJF = 13;</code>
     * @return whether the pNIAMOINNJF field is set
     */
    public boolean hasPNIAMOINNJF() {
      return (bitField0_ & 0x00000040) != 0;
    }

    /**
     * <code>optional uint32 PNIAMOINNJF = 13;</code>
     * @return this
     */
    public PlayerRecordInfo clearPNIAMOINNJF() {
      bitField0_ &= ~0x00000040;
      pNIAMOINNJF = 0;
      return this;
    }

    /**
     * <code>optional uint32 PNIAMOINNJF = 13;</code>
     * @return the pNIAMOINNJF
     */
    public int getPNIAMOINNJF() {
      return pNIAMOINNJF;
    }

    /**
     * <code>optional uint32 PNIAMOINNJF = 13;</code>
     * @param value the pNIAMOINNJF to set
     * @return this
     */
    public PlayerRecordInfo setPNIAMOINNJF(final int value) {
      bitField0_ |= 0x00000040;
      pNIAMOINNJF = value;
      return this;
    }

    /**
     * <code>optional uint32 IPOCLBEJIAF = 14;</code>
     * @return whether the iPOCLBEJIAF field is set
     */
    public boolean hasIPOCLBEJIAF() {
      return (bitField0_ & 0x00000080) != 0;
    }

    /**
     * <code>optional uint32 IPOCLBEJIAF = 14;</code>
     * @return this
     */
    public PlayerRecordInfo clearIPOCLBEJIAF() {
      bitField0_ &= ~0x00000080;
      iPOCLBEJIAF = 0;
      return this;
    }

    /**
     * <code>optional uint32 IPOCLBEJIAF = 14;</code>
     * @return the iPOCLBEJIAF
     */
    public int getIPOCLBEJIAF() {
      return iPOCLBEJIAF;
    }

    /**
     * <code>optional uint32 IPOCLBEJIAF = 14;</code>
     * @param value the iPOCLBEJIAF to set
     * @return this
     */
    public PlayerRecordInfo setIPOCLBEJIAF(final int value) {
      bitField0_ |= 0x00000080;
      iPOCLBEJIAF = value;
      return this;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 7;</code>
     * @return whether the collectionInfo field is set
     */
    public boolean hasCollectionInfo() {
      return (bitField0_ & 0x00000100) != 0;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 7;</code>
     * @return this
     */
    public PlayerRecordInfo clearCollectionInfo() {
      bitField0_ &= ~0x00000100;
      collectionInfo.clear();
      return this;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 7;</code>
     *
     * This method returns the internal storage object without modifying any has state.
     * The returned object should not be modified and be treated as read-only.
     *
     * Use {@link #getMutableCollectionInfo()} if you want to modify it.
     *
     * @return internal storage object for reading
     */
    public PlayerCollectionInfoOuterClass.PlayerCollectionInfo getCollectionInfo() {
      return collectionInfo;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 7;</code>
     *
     * This method returns the internal storage object and sets the corresponding
     * has state. The returned object will become part of this message and its
     * contents may be modified as long as the has state is not cleared.
     *
     * @return internal storage object for modifications
     */
    public PlayerCollectionInfoOuterClass.PlayerCollectionInfo getMutableCollectionInfo() {
      bitField0_ |= 0x00000100;
      return collectionInfo;
    }

    /**
     * <code>optional .PlayerCollectionInfo collection_info = 7;</code>
     * @param value the collectionInfo to set
     * @return this
     */
    public PlayerRecordInfo setCollectionInfo(
        final PlayerCollectionInfoOuterClass.PlayerCollectionInfo value) {
      bitField0_ |= 0x00000100;
      collectionInfo.copyFrom(value);
      return this;
    }

    @Override
    public PlayerRecordInfo copyFrom(final PlayerRecordInfo other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        lAAOICJFOPI = other.lAAOICJFOPI;
        pDHAFOAOMPB = other.pDHAFOAOMPB;
        dKDINDMGEJH = other.dKDINDMGEJH;
        bFGDPMKBHNB = other.bFGDPMKBHNB;
        jJOHCDLEDMO = other.jJOHCDLEDMO;
        eEJCCFCIGDF = other.eEJCCFCIGDF;
        pNIAMOINNJF = other.pNIAMOINNJF;
        iPOCLBEJIAF = other.iPOCLBEJIAF;
        collectionInfo.copyFrom(other.collectionInfo);
      }
      return this;
    }

    @Override
    public PlayerRecordInfo mergeFrom(final PlayerRecordInfo other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasLAAOICJFOPI()) {
        setLAAOICJFOPI(other.lAAOICJFOPI);
      }
      if (other.hasPDHAFOAOMPB()) {
        setPDHAFOAOMPB(other.pDHAFOAOMPB);
      }
      if (other.hasDKDINDMGEJH()) {
        setDKDINDMGEJH(other.dKDINDMGEJH);
      }
      if (other.hasBFGDPMKBHNB()) {
        setBFGDPMKBHNB(other.bFGDPMKBHNB);
      }
      if (other.hasJJOHCDLEDMO()) {
        setJJOHCDLEDMO(other.jJOHCDLEDMO);
      }
      if (other.hasEEJCCFCIGDF()) {
        setEEJCCFCIGDF(other.eEJCCFCIGDF);
      }
      if (other.hasPNIAMOINNJF()) {
        setPNIAMOINNJF(other.pNIAMOINNJF);
      }
      if (other.hasIPOCLBEJIAF()) {
        setIPOCLBEJIAF(other.iPOCLBEJIAF);
      }
      if (other.hasCollectionInfo()) {
        getMutableCollectionInfo().mergeFrom(other.collectionInfo);
      }
      return this;
    }

    @Override
    public PlayerRecordInfo clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      lAAOICJFOPI = 0;
      pDHAFOAOMPB = 0;
      dKDINDMGEJH = 0;
      bFGDPMKBHNB = 0;
      jJOHCDLEDMO = 0;
      eEJCCFCIGDF = 0;
      pNIAMOINNJF = 0;
      iPOCLBEJIAF = 0;
      collectionInfo.clear();
      return this;
    }

    @Override
    public PlayerRecordInfo clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      collectionInfo.clearQuick();
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerRecordInfo)) {
        return false;
      }
      PlayerRecordInfo other = (PlayerRecordInfo) o;
      return bitField0_ == other.bitField0_
        && (!hasLAAOICJFOPI() || lAAOICJFOPI == other.lAAOICJFOPI)
        && (!hasPDHAFOAOMPB() || pDHAFOAOMPB == other.pDHAFOAOMPB)
        && (!hasDKDINDMGEJH() || dKDINDMGEJH == other.dKDINDMGEJH)
        && (!hasBFGDPMKBHNB() || bFGDPMKBHNB == other.bFGDPMKBHNB)
        && (!hasJJOHCDLEDMO() || jJOHCDLEDMO == other.jJOHCDLEDMO)
        && (!hasEEJCCFCIGDF() || eEJCCFCIGDF == other.eEJCCFCIGDF)
        && (!hasPNIAMOINNJF() || pNIAMOINNJF == other.pNIAMOINNJF)
        && (!hasIPOCLBEJIAF() || iPOCLBEJIAF == other.iPOCLBEJIAF)
        && (!hasCollectionInfo() || collectionInfo.equals(other.collectionInfo));
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 8);
        output.writeUInt32NoTag(lAAOICJFOPI);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 16);
        output.writeUInt32NoTag(pDHAFOAOMPB);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 40);
        output.writeUInt32NoTag(dKDINDMGEJH);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 48);
        output.writeUInt32NoTag(bFGDPMKBHNB);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 88);
        output.writeUInt32NoTag(jJOHCDLEDMO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 96);
        output.writeUInt32NoTag(eEJCCFCIGDF);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeRawByte((byte) 104);
        output.writeUInt32NoTag(pNIAMOINNJF);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeRawByte((byte) 112);
        output.writeUInt32NoTag(iPOCLBEJIAF);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeRawByte((byte) 58);
        output.writeMessageNoTag(collectionInfo);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(lAAOICJFOPI);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(pDHAFOAOMPB);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(dKDINDMGEJH);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(bFGDPMKBHNB);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(jJOHCDLEDMO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(eEJCCFCIGDF);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(pNIAMOINNJF);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        size += 1 + ProtoSink.computeUInt32SizeNoTag(iPOCLBEJIAF);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        size += 1 + ProtoSink.computeMessageSizeNoTag(collectionInfo);
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerRecordInfo mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 8: {
            // lAAOICJFOPI
            lAAOICJFOPI = input.readUInt32();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 16) {
              break;
            }
          }
          case 16: {
            // pDHAFOAOMPB
            pDHAFOAOMPB = input.readUInt32();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 40) {
              break;
            }
          }
          case 40: {
            // dKDINDMGEJH
            dKDINDMGEJH = input.readUInt32();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // bFGDPMKBHNB
            bFGDPMKBHNB = input.readUInt32();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // jJOHCDLEDMO
            jJOHCDLEDMO = input.readUInt32();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // eEJCCFCIGDF
            eEJCCFCIGDF = input.readUInt32();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // pNIAMOINNJF
            pNIAMOINNJF = input.readUInt32();
            bitField0_ |= 0x00000040;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // iPOCLBEJIAF
            iPOCLBEJIAF = input.readUInt32();
            bitField0_ |= 0x00000080;
            tag = input.readTag();
            if (tag != 58) {
              break;
            }
          }
          case 58: {
            // collectionInfo
            input.readMessage(collectionInfo);
            bitField0_ |= 0x00000100;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeUInt32(FieldNames.lAAOICJFOPI, lAAOICJFOPI);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeUInt32(FieldNames.pDHAFOAOMPB, pDHAFOAOMPB);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeUInt32(FieldNames.dKDINDMGEJH, dKDINDMGEJH);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeUInt32(FieldNames.bFGDPMKBHNB, bFGDPMKBHNB);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeUInt32(FieldNames.jJOHCDLEDMO, jJOHCDLEDMO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeUInt32(FieldNames.eEJCCFCIGDF, eEJCCFCIGDF);
      }
      if ((bitField0_ & 0x00000040) != 0) {
        output.writeUInt32(FieldNames.pNIAMOINNJF, pNIAMOINNJF);
      }
      if ((bitField0_ & 0x00000080) != 0) {
        output.writeUInt32(FieldNames.iPOCLBEJIAF, iPOCLBEJIAF);
      }
      if ((bitField0_ & 0x00000100) != 0) {
        output.writeMessage(FieldNames.collectionInfo, collectionInfo);
      }
      output.endObject();
    }

    @Override
    public PlayerRecordInfo mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 2056730927: {
            if (input.isAtField(FieldNames.lAAOICJFOPI)) {
              if (!input.trySkipNullValue()) {
                lAAOICJFOPI = input.readUInt32();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 2145492571: {
            if (input.isAtField(FieldNames.pDHAFOAOMPB)) {
              if (!input.trySkipNullValue()) {
                pDHAFOAOMPB = input.readUInt32();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1238047833: {
            if (input.isAtField(FieldNames.dKDINDMGEJH)) {
              if (!input.trySkipNullValue()) {
                dKDINDMGEJH = input.readUInt32();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -177381337: {
            if (input.isAtField(FieldNames.bFGDPMKBHNB)) {
              if (!input.trySkipNullValue()) {
                bFGDPMKBHNB = input.readUInt32();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -261903405: {
            if (input.isAtField(FieldNames.jJOHCDLEDMO)) {
              if (!input.trySkipNullValue()) {
                jJOHCDLEDMO = input.readUInt32();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1487775335: {
            if (input.isAtField(FieldNames.eEJCCFCIGDF)) {
              if (!input.trySkipNullValue()) {
                eEJCCFCIGDF = input.readUInt32();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 297820685: {
            if (input.isAtField(FieldNames.pNIAMOINNJF)) {
              if (!input.trySkipNullValue()) {
                pNIAMOINNJF = input.readUInt32();
                bitField0_ |= 0x00000040;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -434121192: {
            if (input.isAtField(FieldNames.iPOCLBEJIAF)) {
              if (!input.trySkipNullValue()) {
                iPOCLBEJIAF = input.readUInt32();
                bitField0_ |= 0x00000080;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 310642796:
          case 1060168111: {
            if (input.isAtField(FieldNames.collectionInfo)) {
              if (!input.trySkipNullValue()) {
                input.readMessage(collectionInfo);
                bitField0_ |= 0x00000100;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerRecordInfo clone() {
      return new PlayerRecordInfo().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerRecordInfo parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerRecordInfo(), data).checkInitialized();
    }

    public static PlayerRecordInfo parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerRecordInfo(), input).checkInitialized();
    }

    public static PlayerRecordInfo parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerRecordInfo(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerRecordInfo messages
     */
    public static MessageFactory<PlayerRecordInfo> getFactory() {
      return PlayerRecordInfoFactory.INSTANCE;
    }

    private enum PlayerRecordInfoFactory implements MessageFactory<PlayerRecordInfo> {
      INSTANCE;

      @Override
      public PlayerRecordInfo create() {
        return PlayerRecordInfo.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName lAAOICJFOPI = FieldName.forField("LAAOICJFOPI");

      static final FieldName pDHAFOAOMPB = FieldName.forField("PDHAFOAOMPB");

      static final FieldName dKDINDMGEJH = FieldName.forField("DKDINDMGEJH");

      static final FieldName bFGDPMKBHNB = FieldName.forField("BFGDPMKBHNB");

      static final FieldName jJOHCDLEDMO = FieldName.forField("JJOHCDLEDMO");

      static final FieldName eEJCCFCIGDF = FieldName.forField("EEJCCFCIGDF");

      static final FieldName pNIAMOINNJF = FieldName.forField("PNIAMOINNJF");

      static final FieldName iPOCLBEJIAF = FieldName.forField("IPOCLBEJIAF");

      static final FieldName collectionInfo = FieldName.forField("collectionInfo", "collection_info");
    }
  }
}
