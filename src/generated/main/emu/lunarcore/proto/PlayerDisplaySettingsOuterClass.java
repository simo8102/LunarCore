// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerDisplaySettingsOuterClass {
  /**
   * Protobuf type {@code PlayerDisplaySettings}
   */
  public static final class PlayerDisplaySettings extends ProtoMessage<PlayerDisplaySettings> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional .DisplayRecordType GLJHHOCLNFC = 10;</code>
     */
    private int gLJHHOCLNFC;

    /**
     * <code>optional bool LJEELNKPIFJ = 1;</code>
     */
    private boolean lJEELNKPIFJ;

    /**
     * <code>optional bool AMGBJCGCHLE = 3;</code>
     */
    private boolean aMGBJCGCHLE;

    /**
     * <code>optional bool IDFLCNJJLDO = 8;</code>
     */
    private boolean iDFLCNJJLDO;

    /**
     * <code>optional bool FEEELLEAEPC = 12;</code>
     */
    private boolean fEEELLEAEPC;

    /**
     * <code>optional bool AOKKOOOODCN = 13;</code>
     */
    private boolean aOKKOOOODCN;

    private PlayerDisplaySettings() {
    }

    /**
     * @return a new empty instance of {@code PlayerDisplaySettings}
     */
    public static PlayerDisplaySettings newInstance() {
      return new PlayerDisplaySettings();
    }

    /**
     * <code>optional .DisplayRecordType GLJHHOCLNFC = 10;</code>
     * @return whether the gLJHHOCLNFC field is set
     */
    public boolean hasGLJHHOCLNFC() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional .DisplayRecordType GLJHHOCLNFC = 10;</code>
     * @return this
     */
    public PlayerDisplaySettings clearGLJHHOCLNFC() {
      bitField0_ &= ~0x00000001;
      gLJHHOCLNFC = 0;
      return this;
    }

    /**
     * <code>optional .DisplayRecordType GLJHHOCLNFC = 10;</code>
     * @return the gLJHHOCLNFC
     */
    public DisplayRecordTypeOuterClass.DisplayRecordType getGLJHHOCLNFC() {
      return DisplayRecordTypeOuterClass.DisplayRecordType.forNumber(gLJHHOCLNFC);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PlayerDisplaySettings#getGLJHHOCLNFC()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getGLJHHOCLNFCValue() {
      return gLJHHOCLNFC;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link DisplayRecordTypeOuterClass.DisplayRecordType}. Setting an invalid value
     * can cause {@link PlayerDisplaySettings#getGLJHHOCLNFC()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PlayerDisplaySettings setGLJHHOCLNFCValue(final int value) {
      bitField0_ |= 0x00000001;
      gLJHHOCLNFC = value;
      return this;
    }

    /**
     * <code>optional .DisplayRecordType GLJHHOCLNFC = 10;</code>
     * @param value the gLJHHOCLNFC to set
     * @return this
     */
    public PlayerDisplaySettings setGLJHHOCLNFC(
        final DisplayRecordTypeOuterClass.DisplayRecordType value) {
      bitField0_ |= 0x00000001;
      gLJHHOCLNFC = value.getNumber();
      return this;
    }

    /**
     * <code>optional bool LJEELNKPIFJ = 1;</code>
     * @return whether the lJEELNKPIFJ field is set
     */
    public boolean hasLJEELNKPIFJ() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool LJEELNKPIFJ = 1;</code>
     * @return this
     */
    public PlayerDisplaySettings clearLJEELNKPIFJ() {
      bitField0_ &= ~0x00000002;
      lJEELNKPIFJ = false;
      return this;
    }

    /**
     * <code>optional bool LJEELNKPIFJ = 1;</code>
     * @return the lJEELNKPIFJ
     */
    public boolean getLJEELNKPIFJ() {
      return lJEELNKPIFJ;
    }

    /**
     * <code>optional bool LJEELNKPIFJ = 1;</code>
     * @param value the lJEELNKPIFJ to set
     * @return this
     */
    public PlayerDisplaySettings setLJEELNKPIFJ(final boolean value) {
      bitField0_ |= 0x00000002;
      lJEELNKPIFJ = value;
      return this;
    }

    /**
     * <code>optional bool AMGBJCGCHLE = 3;</code>
     * @return whether the aMGBJCGCHLE field is set
     */
    public boolean hasAMGBJCGCHLE() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool AMGBJCGCHLE = 3;</code>
     * @return this
     */
    public PlayerDisplaySettings clearAMGBJCGCHLE() {
      bitField0_ &= ~0x00000004;
      aMGBJCGCHLE = false;
      return this;
    }

    /**
     * <code>optional bool AMGBJCGCHLE = 3;</code>
     * @return the aMGBJCGCHLE
     */
    public boolean getAMGBJCGCHLE() {
      return aMGBJCGCHLE;
    }

    /**
     * <code>optional bool AMGBJCGCHLE = 3;</code>
     * @param value the aMGBJCGCHLE to set
     * @return this
     */
    public PlayerDisplaySettings setAMGBJCGCHLE(final boolean value) {
      bitField0_ |= 0x00000004;
      aMGBJCGCHLE = value;
      return this;
    }

    /**
     * <code>optional bool IDFLCNJJLDO = 8;</code>
     * @return whether the iDFLCNJJLDO field is set
     */
    public boolean hasIDFLCNJJLDO() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional bool IDFLCNJJLDO = 8;</code>
     * @return this
     */
    public PlayerDisplaySettings clearIDFLCNJJLDO() {
      bitField0_ &= ~0x00000008;
      iDFLCNJJLDO = false;
      return this;
    }

    /**
     * <code>optional bool IDFLCNJJLDO = 8;</code>
     * @return the iDFLCNJJLDO
     */
    public boolean getIDFLCNJJLDO() {
      return iDFLCNJJLDO;
    }

    /**
     * <code>optional bool IDFLCNJJLDO = 8;</code>
     * @param value the iDFLCNJJLDO to set
     * @return this
     */
    public PlayerDisplaySettings setIDFLCNJJLDO(final boolean value) {
      bitField0_ |= 0x00000008;
      iDFLCNJJLDO = value;
      return this;
    }

    /**
     * <code>optional bool FEEELLEAEPC = 12;</code>
     * @return whether the fEEELLEAEPC field is set
     */
    public boolean hasFEEELLEAEPC() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional bool FEEELLEAEPC = 12;</code>
     * @return this
     */
    public PlayerDisplaySettings clearFEEELLEAEPC() {
      bitField0_ &= ~0x00000010;
      fEEELLEAEPC = false;
      return this;
    }

    /**
     * <code>optional bool FEEELLEAEPC = 12;</code>
     * @return the fEEELLEAEPC
     */
    public boolean getFEEELLEAEPC() {
      return fEEELLEAEPC;
    }

    /**
     * <code>optional bool FEEELLEAEPC = 12;</code>
     * @param value the fEEELLEAEPC to set
     * @return this
     */
    public PlayerDisplaySettings setFEEELLEAEPC(final boolean value) {
      bitField0_ |= 0x00000010;
      fEEELLEAEPC = value;
      return this;
    }

    /**
     * <code>optional bool AOKKOOOODCN = 13;</code>
     * @return whether the aOKKOOOODCN field is set
     */
    public boolean hasAOKKOOOODCN() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional bool AOKKOOOODCN = 13;</code>
     * @return this
     */
    public PlayerDisplaySettings clearAOKKOOOODCN() {
      bitField0_ &= ~0x00000020;
      aOKKOOOODCN = false;
      return this;
    }

    /**
     * <code>optional bool AOKKOOOODCN = 13;</code>
     * @return the aOKKOOOODCN
     */
    public boolean getAOKKOOOODCN() {
      return aOKKOOOODCN;
    }

    /**
     * <code>optional bool AOKKOOOODCN = 13;</code>
     * @param value the aOKKOOOODCN to set
     * @return this
     */
    public PlayerDisplaySettings setAOKKOOOODCN(final boolean value) {
      bitField0_ |= 0x00000020;
      aOKKOOOODCN = value;
      return this;
    }

    @Override
    public PlayerDisplaySettings copyFrom(final PlayerDisplaySettings other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        gLJHHOCLNFC = other.gLJHHOCLNFC;
        lJEELNKPIFJ = other.lJEELNKPIFJ;
        aMGBJCGCHLE = other.aMGBJCGCHLE;
        iDFLCNJJLDO = other.iDFLCNJJLDO;
        fEEELLEAEPC = other.fEEELLEAEPC;
        aOKKOOOODCN = other.aOKKOOOODCN;
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final PlayerDisplaySettings other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasGLJHHOCLNFC()) {
        setGLJHHOCLNFCValue(other.gLJHHOCLNFC);
      }
      if (other.hasLJEELNKPIFJ()) {
        setLJEELNKPIFJ(other.lJEELNKPIFJ);
      }
      if (other.hasAMGBJCGCHLE()) {
        setAMGBJCGCHLE(other.aMGBJCGCHLE);
      }
      if (other.hasIDFLCNJJLDO()) {
        setIDFLCNJJLDO(other.iDFLCNJJLDO);
      }
      if (other.hasFEEELLEAEPC()) {
        setFEEELLEAEPC(other.fEEELLEAEPC);
      }
      if (other.hasAOKKOOOODCN()) {
        setAOKKOOOODCN(other.aOKKOOOODCN);
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      gLJHHOCLNFC = 0;
      lJEELNKPIFJ = false;
      aMGBJCGCHLE = false;
      iDFLCNJJLDO = false;
      fEEELLEAEPC = false;
      aOKKOOOODCN = false;
      return this;
    }

    @Override
    public PlayerDisplaySettings clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerDisplaySettings)) {
        return false;
      }
      PlayerDisplaySettings other = (PlayerDisplaySettings) o;
      return bitField0_ == other.bitField0_
        && (!hasGLJHHOCLNFC() || gLJHHOCLNFC == other.gLJHHOCLNFC)
        && (!hasLJEELNKPIFJ() || lJEELNKPIFJ == other.lJEELNKPIFJ)
        && (!hasAMGBJCGCHLE() || aMGBJCGCHLE == other.aMGBJCGCHLE)
        && (!hasIDFLCNJJLDO() || iDFLCNJJLDO == other.iDFLCNJJLDO)
        && (!hasFEEELLEAEPC() || fEEELLEAEPC == other.fEEELLEAEPC)
        && (!hasAOKKOOOODCN() || aOKKOOOODCN == other.aOKKOOOODCN);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 80);
        output.writeEnumNoTag(gLJHHOCLNFC);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 8);
        output.writeBoolNoTag(lJEELNKPIFJ);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 24);
        output.writeBoolNoTag(aMGBJCGCHLE);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 64);
        output.writeBoolNoTag(iDFLCNJJLDO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 96);
        output.writeBoolNoTag(fEEELLEAEPC);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 104);
        output.writeBoolNoTag(aOKKOOOODCN);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(gLJHHOCLNFC);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerDisplaySettings mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 80: {
            // gLJHHOCLNFC
            final int value = input.readInt32();
            if (DisplayRecordTypeOuterClass.DisplayRecordType.forNumber(value) != null) {
              gLJHHOCLNFC = value;
              bitField0_ |= 0x00000001;
            }
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // lJEELNKPIFJ
            lJEELNKPIFJ = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 24) {
              break;
            }
          }
          case 24: {
            // aMGBJCGCHLE
            aMGBJCGCHLE = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 64) {
              break;
            }
          }
          case 64: {
            // iDFLCNJJLDO
            iDFLCNJJLDO = input.readBool();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 96) {
              break;
            }
          }
          case 96: {
            // fEEELLEAEPC
            fEEELLEAEPC = input.readBool();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // aOKKOOOODCN
            aOKKOOOODCN = input.readBool();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeEnum(FieldNames.gLJHHOCLNFC, gLJHHOCLNFC, DisplayRecordTypeOuterClass.DisplayRecordType.converter());
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.lJEELNKPIFJ, lJEELNKPIFJ);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.aMGBJCGCHLE, aMGBJCGCHLE);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeBool(FieldNames.iDFLCNJJLDO, iDFLCNJJLDO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeBool(FieldNames.fEEELLEAEPC, fEEELLEAEPC);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeBool(FieldNames.aOKKOOOODCN, aOKKOOOODCN);
      }
      output.endObject();
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1337672088: {
            if (input.isAtField(FieldNames.gLJHHOCLNFC)) {
              if (!input.trySkipNullValue()) {
                final DisplayRecordTypeOuterClass.DisplayRecordType value = input.readEnum(DisplayRecordTypeOuterClass.DisplayRecordType.converter());
                if (value != null) {
                  gLJHHOCLNFC = value.getNumber();
                  bitField0_ |= 0x00000001;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 83671720: {
            if (input.isAtField(FieldNames.lJEELNKPIFJ)) {
              if (!input.trySkipNullValue()) {
                lJEELNKPIFJ = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -266688539: {
            if (input.isAtField(FieldNames.aMGBJCGCHLE)) {
              if (!input.trySkipNullValue()) {
                aMGBJCGCHLE = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 467257547: {
            if (input.isAtField(FieldNames.iDFLCNJJLDO)) {
              if (!input.trySkipNullValue()) {
                iDFLCNJJLDO = input.readBool();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1100204323: {
            if (input.isAtField(FieldNames.fEEELLEAEPC)) {
              if (!input.trySkipNullValue()) {
                fEEELLEAEPC = input.readBool();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -300332511: {
            if (input.isAtField(FieldNames.aOKKOOOODCN)) {
              if (!input.trySkipNullValue()) {
                aOKKOOOODCN = input.readBool();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerDisplaySettings clone() {
      return new PlayerDisplaySettings().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerDisplaySettings parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), data).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerDisplaySettings messages
     */
    public static MessageFactory<PlayerDisplaySettings> getFactory() {
      return PlayerDisplaySettingsFactory.INSTANCE;
    }

    private enum PlayerDisplaySettingsFactory implements MessageFactory<PlayerDisplaySettings> {
      INSTANCE;

      @Override
      public PlayerDisplaySettings create() {
        return PlayerDisplaySettings.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName gLJHHOCLNFC = FieldName.forField("GLJHHOCLNFC");

      static final FieldName lJEELNKPIFJ = FieldName.forField("LJEELNKPIFJ");

      static final FieldName aMGBJCGCHLE = FieldName.forField("AMGBJCGCHLE");

      static final FieldName iDFLCNJJLDO = FieldName.forField("IDFLCNJJLDO");

      static final FieldName fEEELLEAEPC = FieldName.forField("FEEELLEAEPC");

      static final FieldName aOKKOOOODCN = FieldName.forField("AOKKOOOODCN");
    }
  }
}
