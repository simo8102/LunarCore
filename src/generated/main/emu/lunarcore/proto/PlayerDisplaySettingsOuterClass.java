// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerDisplaySettingsOuterClass {
  /**
   * Protobuf type {@code PlayerDisplaySettings}
   */
  public static final class PlayerDisplaySettings extends ProtoMessage<PlayerDisplaySettings> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional .DisplayRecordType NENFHJDADJA = 5;</code>
     */
    private int nENFHJDADJA;

    /**
     * <code>optional bool OOAJONLNOKC = 1;</code>
     */
    private boolean oOAJONLNOKC;

    /**
     * <code>optional bool BKFKEAOKJIC = 4;</code>
     */
    private boolean bKFKEAOKJIC;

    /**
     * <code>optional bool KAMIFJJEHJO = 10;</code>
     */
    private boolean kAMIFJJEHJO;

    /**
     * <code>optional bool ACEOIOACIJO = 11;</code>
     */
    private boolean aCEOIOACIJO;

    /**
     * <code>optional bool DADJOGHHEDE = 14;</code>
     */
    private boolean dADJOGHHEDE;

    private PlayerDisplaySettings() {
    }

    /**
     * @return a new empty instance of {@code PlayerDisplaySettings}
     */
    public static PlayerDisplaySettings newInstance() {
      return new PlayerDisplaySettings();
    }

    /**
     * <code>optional .DisplayRecordType NENFHJDADJA = 5;</code>
     * @return whether the nENFHJDADJA field is set
     */
    public boolean hasNENFHJDADJA() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional .DisplayRecordType NENFHJDADJA = 5;</code>
     * @return this
     */
    public PlayerDisplaySettings clearNENFHJDADJA() {
      bitField0_ &= ~0x00000001;
      nENFHJDADJA = 0;
      return this;
    }

    /**
     * <code>optional .DisplayRecordType NENFHJDADJA = 5;</code>
     * @return the nENFHJDADJA
     */
    public DisplayRecordTypeOuterClass.DisplayRecordType getNENFHJDADJA() {
      return DisplayRecordTypeOuterClass.DisplayRecordType.forNumber(nENFHJDADJA);
    }

    /**
     * Gets the value of the internal enum store. The result is
     * equivalent to {@link PlayerDisplaySettings#getNENFHJDADJA()}.getNumber().
     *
     * @return numeric wire representation
     */
    public int getNENFHJDADJAValue() {
      return nENFHJDADJA;
    }

    /**
     * Sets the value of the internal enum store. This does not
     * do any validity checks, so be sure to use appropriate value
     * constants from {@link DisplayRecordTypeOuterClass.DisplayRecordType}. Setting an invalid value
     * can cause {@link PlayerDisplaySettings#getNENFHJDADJA()} to return null
     *
     * @param value the numeric wire value to set
     * @return this
     */
    public PlayerDisplaySettings setNENFHJDADJAValue(final int value) {
      bitField0_ |= 0x00000001;
      nENFHJDADJA = value;
      return this;
    }

    /**
     * <code>optional .DisplayRecordType NENFHJDADJA = 5;</code>
     * @param value the nENFHJDADJA to set
     * @return this
     */
    public PlayerDisplaySettings setNENFHJDADJA(
        final DisplayRecordTypeOuterClass.DisplayRecordType value) {
      bitField0_ |= 0x00000001;
      nENFHJDADJA = value.getNumber();
      return this;
    }

    /**
     * <code>optional bool OOAJONLNOKC = 1;</code>
     * @return whether the oOAJONLNOKC field is set
     */
    public boolean hasOOAJONLNOKC() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool OOAJONLNOKC = 1;</code>
     * @return this
     */
    public PlayerDisplaySettings clearOOAJONLNOKC() {
      bitField0_ &= ~0x00000002;
      oOAJONLNOKC = false;
      return this;
    }

    /**
     * <code>optional bool OOAJONLNOKC = 1;</code>
     * @return the oOAJONLNOKC
     */
    public boolean getOOAJONLNOKC() {
      return oOAJONLNOKC;
    }

    /**
     * <code>optional bool OOAJONLNOKC = 1;</code>
     * @param value the oOAJONLNOKC to set
     * @return this
     */
    public PlayerDisplaySettings setOOAJONLNOKC(final boolean value) {
      bitField0_ |= 0x00000002;
      oOAJONLNOKC = value;
      return this;
    }

    /**
     * <code>optional bool BKFKEAOKJIC = 4;</code>
     * @return whether the bKFKEAOKJIC field is set
     */
    public boolean hasBKFKEAOKJIC() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool BKFKEAOKJIC = 4;</code>
     * @return this
     */
    public PlayerDisplaySettings clearBKFKEAOKJIC() {
      bitField0_ &= ~0x00000004;
      bKFKEAOKJIC = false;
      return this;
    }

    /**
     * <code>optional bool BKFKEAOKJIC = 4;</code>
     * @return the bKFKEAOKJIC
     */
    public boolean getBKFKEAOKJIC() {
      return bKFKEAOKJIC;
    }

    /**
     * <code>optional bool BKFKEAOKJIC = 4;</code>
     * @param value the bKFKEAOKJIC to set
     * @return this
     */
    public PlayerDisplaySettings setBKFKEAOKJIC(final boolean value) {
      bitField0_ |= 0x00000004;
      bKFKEAOKJIC = value;
      return this;
    }

    /**
     * <code>optional bool KAMIFJJEHJO = 10;</code>
     * @return whether the kAMIFJJEHJO field is set
     */
    public boolean hasKAMIFJJEHJO() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional bool KAMIFJJEHJO = 10;</code>
     * @return this
     */
    public PlayerDisplaySettings clearKAMIFJJEHJO() {
      bitField0_ &= ~0x00000008;
      kAMIFJJEHJO = false;
      return this;
    }

    /**
     * <code>optional bool KAMIFJJEHJO = 10;</code>
     * @return the kAMIFJJEHJO
     */
    public boolean getKAMIFJJEHJO() {
      return kAMIFJJEHJO;
    }

    /**
     * <code>optional bool KAMIFJJEHJO = 10;</code>
     * @param value the kAMIFJJEHJO to set
     * @return this
     */
    public PlayerDisplaySettings setKAMIFJJEHJO(final boolean value) {
      bitField0_ |= 0x00000008;
      kAMIFJJEHJO = value;
      return this;
    }

    /**
     * <code>optional bool ACEOIOACIJO = 11;</code>
     * @return whether the aCEOIOACIJO field is set
     */
    public boolean hasACEOIOACIJO() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional bool ACEOIOACIJO = 11;</code>
     * @return this
     */
    public PlayerDisplaySettings clearACEOIOACIJO() {
      bitField0_ &= ~0x00000010;
      aCEOIOACIJO = false;
      return this;
    }

    /**
     * <code>optional bool ACEOIOACIJO = 11;</code>
     * @return the aCEOIOACIJO
     */
    public boolean getACEOIOACIJO() {
      return aCEOIOACIJO;
    }

    /**
     * <code>optional bool ACEOIOACIJO = 11;</code>
     * @param value the aCEOIOACIJO to set
     * @return this
     */
    public PlayerDisplaySettings setACEOIOACIJO(final boolean value) {
      bitField0_ |= 0x00000010;
      aCEOIOACIJO = value;
      return this;
    }

    /**
     * <code>optional bool DADJOGHHEDE = 14;</code>
     * @return whether the dADJOGHHEDE field is set
     */
    public boolean hasDADJOGHHEDE() {
      return (bitField0_ & 0x00000020) != 0;
    }

    /**
     * <code>optional bool DADJOGHHEDE = 14;</code>
     * @return this
     */
    public PlayerDisplaySettings clearDADJOGHHEDE() {
      bitField0_ &= ~0x00000020;
      dADJOGHHEDE = false;
      return this;
    }

    /**
     * <code>optional bool DADJOGHHEDE = 14;</code>
     * @return the dADJOGHHEDE
     */
    public boolean getDADJOGHHEDE() {
      return dADJOGHHEDE;
    }

    /**
     * <code>optional bool DADJOGHHEDE = 14;</code>
     * @param value the dADJOGHHEDE to set
     * @return this
     */
    public PlayerDisplaySettings setDADJOGHHEDE(final boolean value) {
      bitField0_ |= 0x00000020;
      dADJOGHHEDE = value;
      return this;
    }

    @Override
    public PlayerDisplaySettings copyFrom(final PlayerDisplaySettings other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        nENFHJDADJA = other.nENFHJDADJA;
        oOAJONLNOKC = other.oOAJONLNOKC;
        bKFKEAOKJIC = other.bKFKEAOKJIC;
        kAMIFJJEHJO = other.kAMIFJJEHJO;
        aCEOIOACIJO = other.aCEOIOACIJO;
        dADJOGHHEDE = other.dADJOGHHEDE;
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final PlayerDisplaySettings other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasNENFHJDADJA()) {
        setNENFHJDADJAValue(other.nENFHJDADJA);
      }
      if (other.hasOOAJONLNOKC()) {
        setOOAJONLNOKC(other.oOAJONLNOKC);
      }
      if (other.hasBKFKEAOKJIC()) {
        setBKFKEAOKJIC(other.bKFKEAOKJIC);
      }
      if (other.hasKAMIFJJEHJO()) {
        setKAMIFJJEHJO(other.kAMIFJJEHJO);
      }
      if (other.hasACEOIOACIJO()) {
        setACEOIOACIJO(other.aCEOIOACIJO);
      }
      if (other.hasDADJOGHHEDE()) {
        setDADJOGHHEDE(other.dADJOGHHEDE);
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      nENFHJDADJA = 0;
      oOAJONLNOKC = false;
      bKFKEAOKJIC = false;
      kAMIFJJEHJO = false;
      aCEOIOACIJO = false;
      dADJOGHHEDE = false;
      return this;
    }

    @Override
    public PlayerDisplaySettings clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerDisplaySettings)) {
        return false;
      }
      PlayerDisplaySettings other = (PlayerDisplaySettings) o;
      return bitField0_ == other.bitField0_
        && (!hasNENFHJDADJA() || nENFHJDADJA == other.nENFHJDADJA)
        && (!hasOOAJONLNOKC() || oOAJONLNOKC == other.oOAJONLNOKC)
        && (!hasBKFKEAOKJIC() || bKFKEAOKJIC == other.bKFKEAOKJIC)
        && (!hasKAMIFJJEHJO() || kAMIFJJEHJO == other.kAMIFJJEHJO)
        && (!hasACEOIOACIJO() || aCEOIOACIJO == other.aCEOIOACIJO)
        && (!hasDADJOGHHEDE() || dADJOGHHEDE == other.dADJOGHHEDE);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 40);
        output.writeEnumNoTag(nENFHJDADJA);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 8);
        output.writeBoolNoTag(oOAJONLNOKC);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 32);
        output.writeBoolNoTag(bKFKEAOKJIC);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 80);
        output.writeBoolNoTag(kAMIFJJEHJO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 88);
        output.writeBoolNoTag(aCEOIOACIJO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeRawByte((byte) 112);
        output.writeBoolNoTag(dADJOGHHEDE);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 1 + ProtoSink.computeEnumSizeNoTag(nENFHJDADJA);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000020) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerDisplaySettings mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 40: {
            // nENFHJDADJA
            final int value = input.readInt32();
            if (DisplayRecordTypeOuterClass.DisplayRecordType.forNumber(value) != null) {
              nENFHJDADJA = value;
              bitField0_ |= 0x00000001;
            }
            tag = input.readTag();
            if (tag != 8) {
              break;
            }
          }
          case 8: {
            // oOAJONLNOKC
            oOAJONLNOKC = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 32) {
              break;
            }
          }
          case 32: {
            // bKFKEAOKJIC
            bKFKEAOKJIC = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 80) {
              break;
            }
          }
          case 80: {
            // kAMIFJJEHJO
            kAMIFJJEHJO = input.readBool();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 88) {
              break;
            }
          }
          case 88: {
            // aCEOIOACIJO
            aCEOIOACIJO = input.readBool();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // dADJOGHHEDE
            dADJOGHHEDE = input.readBool();
            bitField0_ |= 0x00000020;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeEnum(FieldNames.nENFHJDADJA, nENFHJDADJA, DisplayRecordTypeOuterClass.DisplayRecordType.converter());
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.oOAJONLNOKC, oOAJONLNOKC);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.bKFKEAOKJIC, bKFKEAOKJIC);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeBool(FieldNames.kAMIFJJEHJO, kAMIFJJEHJO);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeBool(FieldNames.aCEOIOACIJO, aCEOIOACIJO);
      }
      if ((bitField0_ & 0x00000020) != 0) {
        output.writeBool(FieldNames.dADJOGHHEDE, dADJOGHHEDE);
      }
      output.endObject();
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 751445645: {
            if (input.isAtField(FieldNames.nENFHJDADJA)) {
              if (!input.trySkipNullValue()) {
                final DisplayRecordTypeOuterClass.DisplayRecordType value = input.readEnum(DisplayRecordTypeOuterClass.DisplayRecordType.converter());
                if (value != null) {
                  nENFHJDADJA = value.getNumber();
                  bitField0_ |= 0x00000001;
                } else {
                  input.skipUnknownEnumValue();
                }
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -567401347: {
            if (input.isAtField(FieldNames.oOAJONLNOKC)) {
              if (!input.trySkipNullValue()) {
                oOAJONLNOKC = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1549915682: {
            if (input.isAtField(FieldNames.bKFKEAOKJIC)) {
              if (!input.trySkipNullValue()) {
                bKFKEAOKJIC = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -690005892: {
            if (input.isAtField(FieldNames.kAMIFJJEHJO)) {
              if (!input.trySkipNullValue()) {
                kAMIFJJEHJO = input.readBool();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1650591930: {
            if (input.isAtField(FieldNames.aCEOIOACIJO)) {
              if (!input.trySkipNullValue()) {
                aCEOIOACIJO = input.readBool();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -856266613: {
            if (input.isAtField(FieldNames.dADJOGHHEDE)) {
              if (!input.trySkipNullValue()) {
                dADJOGHHEDE = input.readBool();
                bitField0_ |= 0x00000020;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerDisplaySettings clone() {
      return new PlayerDisplaySettings().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerDisplaySettings parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), data).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerDisplaySettings messages
     */
    public static MessageFactory<PlayerDisplaySettings> getFactory() {
      return PlayerDisplaySettingsFactory.INSTANCE;
    }

    private enum PlayerDisplaySettingsFactory implements MessageFactory<PlayerDisplaySettings> {
      INSTANCE;

      @Override
      public PlayerDisplaySettings create() {
        return PlayerDisplaySettings.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName nENFHJDADJA = FieldName.forField("NENFHJDADJA");

      static final FieldName oOAJONLNOKC = FieldName.forField("OOAJONLNOKC");

      static final FieldName bKFKEAOKJIC = FieldName.forField("BKFKEAOKJIC");

      static final FieldName kAMIFJJEHJO = FieldName.forField("KAMIFJJEHJO");

      static final FieldName aCEOIOACIJO = FieldName.forField("ACEOIOACIJO");

      static final FieldName dADJOGHHEDE = FieldName.forField("DADJOGHHEDE");
    }
  }
}
