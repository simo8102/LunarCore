// Code generated by protocol buffer compiler. Do not edit!
package emu.lunarcore.proto;

import java.io.IOException;
import us.hebi.quickbuf.FieldName;
import us.hebi.quickbuf.InvalidProtocolBufferException;
import us.hebi.quickbuf.JsonSink;
import us.hebi.quickbuf.JsonSource;
import us.hebi.quickbuf.MessageFactory;
import us.hebi.quickbuf.ProtoMessage;
import us.hebi.quickbuf.ProtoSink;
import us.hebi.quickbuf.ProtoSource;

public final class PlayerDisplaySettingsOuterClass {
  /**
   * Protobuf type {@code PlayerDisplaySettings}
   */
  public static final class PlayerDisplaySettings extends ProtoMessage<PlayerDisplaySettings> implements Cloneable {
    private static final long serialVersionUID = 0L;

    /**
     * <code>optional bool GGODAIOHJIF = 2;</code>
     */
    private boolean gGODAIOHJIF;

    /**
     * <code>optional bool HHCGDEOCOMI = 3;</code>
     */
    private boolean hHCGDEOCOMI;

    /**
     * <code>optional bool BKPACECKIIA = 6;</code>
     */
    private boolean bKPACECKIIA;

    /**
     * <code>optional bool KMJDMEFGCCK = 13;</code>
     */
    private boolean kMJDMEFGCCK;

    /**
     * <code>optional bool JCNINCCCAKL = 14;</code>
     */
    private boolean jCNINCCCAKL;

    private PlayerDisplaySettings() {
    }

    /**
     * @return a new empty instance of {@code PlayerDisplaySettings}
     */
    public static PlayerDisplaySettings newInstance() {
      return new PlayerDisplaySettings();
    }

    /**
     * <code>optional bool GGODAIOHJIF = 2;</code>
     * @return whether the gGODAIOHJIF field is set
     */
    public boolean hasGGODAIOHJIF() {
      return (bitField0_ & 0x00000001) != 0;
    }

    /**
     * <code>optional bool GGODAIOHJIF = 2;</code>
     * @return this
     */
    public PlayerDisplaySettings clearGGODAIOHJIF() {
      bitField0_ &= ~0x00000001;
      gGODAIOHJIF = false;
      return this;
    }

    /**
     * <code>optional bool GGODAIOHJIF = 2;</code>
     * @return the gGODAIOHJIF
     */
    public boolean getGGODAIOHJIF() {
      return gGODAIOHJIF;
    }

    /**
     * <code>optional bool GGODAIOHJIF = 2;</code>
     * @param value the gGODAIOHJIF to set
     * @return this
     */
    public PlayerDisplaySettings setGGODAIOHJIF(final boolean value) {
      bitField0_ |= 0x00000001;
      gGODAIOHJIF = value;
      return this;
    }

    /**
     * <code>optional bool HHCGDEOCOMI = 3;</code>
     * @return whether the hHCGDEOCOMI field is set
     */
    public boolean hasHHCGDEOCOMI() {
      return (bitField0_ & 0x00000002) != 0;
    }

    /**
     * <code>optional bool HHCGDEOCOMI = 3;</code>
     * @return this
     */
    public PlayerDisplaySettings clearHHCGDEOCOMI() {
      bitField0_ &= ~0x00000002;
      hHCGDEOCOMI = false;
      return this;
    }

    /**
     * <code>optional bool HHCGDEOCOMI = 3;</code>
     * @return the hHCGDEOCOMI
     */
    public boolean getHHCGDEOCOMI() {
      return hHCGDEOCOMI;
    }

    /**
     * <code>optional bool HHCGDEOCOMI = 3;</code>
     * @param value the hHCGDEOCOMI to set
     * @return this
     */
    public PlayerDisplaySettings setHHCGDEOCOMI(final boolean value) {
      bitField0_ |= 0x00000002;
      hHCGDEOCOMI = value;
      return this;
    }

    /**
     * <code>optional bool BKPACECKIIA = 6;</code>
     * @return whether the bKPACECKIIA field is set
     */
    public boolean hasBKPACECKIIA() {
      return (bitField0_ & 0x00000004) != 0;
    }

    /**
     * <code>optional bool BKPACECKIIA = 6;</code>
     * @return this
     */
    public PlayerDisplaySettings clearBKPACECKIIA() {
      bitField0_ &= ~0x00000004;
      bKPACECKIIA = false;
      return this;
    }

    /**
     * <code>optional bool BKPACECKIIA = 6;</code>
     * @return the bKPACECKIIA
     */
    public boolean getBKPACECKIIA() {
      return bKPACECKIIA;
    }

    /**
     * <code>optional bool BKPACECKIIA = 6;</code>
     * @param value the bKPACECKIIA to set
     * @return this
     */
    public PlayerDisplaySettings setBKPACECKIIA(final boolean value) {
      bitField0_ |= 0x00000004;
      bKPACECKIIA = value;
      return this;
    }

    /**
     * <code>optional bool KMJDMEFGCCK = 13;</code>
     * @return whether the kMJDMEFGCCK field is set
     */
    public boolean hasKMJDMEFGCCK() {
      return (bitField0_ & 0x00000008) != 0;
    }

    /**
     * <code>optional bool KMJDMEFGCCK = 13;</code>
     * @return this
     */
    public PlayerDisplaySettings clearKMJDMEFGCCK() {
      bitField0_ &= ~0x00000008;
      kMJDMEFGCCK = false;
      return this;
    }

    /**
     * <code>optional bool KMJDMEFGCCK = 13;</code>
     * @return the kMJDMEFGCCK
     */
    public boolean getKMJDMEFGCCK() {
      return kMJDMEFGCCK;
    }

    /**
     * <code>optional bool KMJDMEFGCCK = 13;</code>
     * @param value the kMJDMEFGCCK to set
     * @return this
     */
    public PlayerDisplaySettings setKMJDMEFGCCK(final boolean value) {
      bitField0_ |= 0x00000008;
      kMJDMEFGCCK = value;
      return this;
    }

    /**
     * <code>optional bool JCNINCCCAKL = 14;</code>
     * @return whether the jCNINCCCAKL field is set
     */
    public boolean hasJCNINCCCAKL() {
      return (bitField0_ & 0x00000010) != 0;
    }

    /**
     * <code>optional bool JCNINCCCAKL = 14;</code>
     * @return this
     */
    public PlayerDisplaySettings clearJCNINCCCAKL() {
      bitField0_ &= ~0x00000010;
      jCNINCCCAKL = false;
      return this;
    }

    /**
     * <code>optional bool JCNINCCCAKL = 14;</code>
     * @return the jCNINCCCAKL
     */
    public boolean getJCNINCCCAKL() {
      return jCNINCCCAKL;
    }

    /**
     * <code>optional bool JCNINCCCAKL = 14;</code>
     * @param value the jCNINCCCAKL to set
     * @return this
     */
    public PlayerDisplaySettings setJCNINCCCAKL(final boolean value) {
      bitField0_ |= 0x00000010;
      jCNINCCCAKL = value;
      return this;
    }

    @Override
    public PlayerDisplaySettings copyFrom(final PlayerDisplaySettings other) {
      cachedSize = other.cachedSize;
      if ((bitField0_ | other.bitField0_) != 0) {
        bitField0_ = other.bitField0_;
        gGODAIOHJIF = other.gGODAIOHJIF;
        hHCGDEOCOMI = other.hHCGDEOCOMI;
        bKPACECKIIA = other.bKPACECKIIA;
        kMJDMEFGCCK = other.kMJDMEFGCCK;
        jCNINCCCAKL = other.jCNINCCCAKL;
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final PlayerDisplaySettings other) {
      if (other.isEmpty()) {
        return this;
      }
      cachedSize = -1;
      if (other.hasGGODAIOHJIF()) {
        setGGODAIOHJIF(other.gGODAIOHJIF);
      }
      if (other.hasHHCGDEOCOMI()) {
        setHHCGDEOCOMI(other.hHCGDEOCOMI);
      }
      if (other.hasBKPACECKIIA()) {
        setBKPACECKIIA(other.bKPACECKIIA);
      }
      if (other.hasKMJDMEFGCCK()) {
        setKMJDMEFGCCK(other.kMJDMEFGCCK);
      }
      if (other.hasJCNINCCCAKL()) {
        setJCNINCCCAKL(other.jCNINCCCAKL);
      }
      return this;
    }

    @Override
    public PlayerDisplaySettings clear() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      gGODAIOHJIF = false;
      hHCGDEOCOMI = false;
      bKPACECKIIA = false;
      kMJDMEFGCCK = false;
      jCNINCCCAKL = false;
      return this;
    }

    @Override
    public PlayerDisplaySettings clearQuick() {
      if (isEmpty()) {
        return this;
      }
      cachedSize = -1;
      bitField0_ = 0;
      return this;
    }

    @Override
    public boolean equals(Object o) {
      if (o == this) {
        return true;
      }
      if (!(o instanceof PlayerDisplaySettings)) {
        return false;
      }
      PlayerDisplaySettings other = (PlayerDisplaySettings) o;
      return bitField0_ == other.bitField0_
        && (!hasGGODAIOHJIF() || gGODAIOHJIF == other.gGODAIOHJIF)
        && (!hasHHCGDEOCOMI() || hHCGDEOCOMI == other.hHCGDEOCOMI)
        && (!hasBKPACECKIIA() || bKPACECKIIA == other.bKPACECKIIA)
        && (!hasKMJDMEFGCCK() || kMJDMEFGCCK == other.kMJDMEFGCCK)
        && (!hasJCNINCCCAKL() || jCNINCCCAKL == other.jCNINCCCAKL);
    }

    @Override
    public void writeTo(final ProtoSink output) throws IOException {
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeRawByte((byte) 16);
        output.writeBoolNoTag(gGODAIOHJIF);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeRawByte((byte) 24);
        output.writeBoolNoTag(hHCGDEOCOMI);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeRawByte((byte) 48);
        output.writeBoolNoTag(bKPACECKIIA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeRawByte((byte) 104);
        output.writeBoolNoTag(kMJDMEFGCCK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeRawByte((byte) 112);
        output.writeBoolNoTag(jCNINCCCAKL);
      }
    }

    @Override
    protected int computeSerializedSize() {
      int size = 0;
      if ((bitField0_ & 0x00000001) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000002) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000004) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000008) != 0) {
        size += 2;
      }
      if ((bitField0_ & 0x00000010) != 0) {
        size += 2;
      }
      return size;
    }

    @Override
    @SuppressWarnings("fallthrough")
    public PlayerDisplaySettings mergeFrom(final ProtoSource input) throws IOException {
      // Enabled Fall-Through Optimization (QuickBuffers)
      int tag = input.readTag();
      while (true) {
        switch (tag) {
          case 16: {
            // gGODAIOHJIF
            gGODAIOHJIF = input.readBool();
            bitField0_ |= 0x00000001;
            tag = input.readTag();
            if (tag != 24) {
              break;
            }
          }
          case 24: {
            // hHCGDEOCOMI
            hHCGDEOCOMI = input.readBool();
            bitField0_ |= 0x00000002;
            tag = input.readTag();
            if (tag != 48) {
              break;
            }
          }
          case 48: {
            // bKPACECKIIA
            bKPACECKIIA = input.readBool();
            bitField0_ |= 0x00000004;
            tag = input.readTag();
            if (tag != 104) {
              break;
            }
          }
          case 104: {
            // kMJDMEFGCCK
            kMJDMEFGCCK = input.readBool();
            bitField0_ |= 0x00000008;
            tag = input.readTag();
            if (tag != 112) {
              break;
            }
          }
          case 112: {
            // jCNINCCCAKL
            jCNINCCCAKL = input.readBool();
            bitField0_ |= 0x00000010;
            tag = input.readTag();
            if (tag != 0) {
              break;
            }
          }
          case 0: {
            return this;
          }
          default: {
            if (!input.skipField(tag)) {
              return this;
            }
            tag = input.readTag();
            break;
          }
        }
      }
    }

    @Override
    public void writeTo(final JsonSink output) throws IOException {
      output.beginObject();
      if ((bitField0_ & 0x00000001) != 0) {
        output.writeBool(FieldNames.gGODAIOHJIF, gGODAIOHJIF);
      }
      if ((bitField0_ & 0x00000002) != 0) {
        output.writeBool(FieldNames.hHCGDEOCOMI, hHCGDEOCOMI);
      }
      if ((bitField0_ & 0x00000004) != 0) {
        output.writeBool(FieldNames.bKPACECKIIA, bKPACECKIIA);
      }
      if ((bitField0_ & 0x00000008) != 0) {
        output.writeBool(FieldNames.kMJDMEFGCCK, kMJDMEFGCCK);
      }
      if ((bitField0_ & 0x00000010) != 0) {
        output.writeBool(FieldNames.jCNINCCCAKL, jCNINCCCAKL);
      }
      output.endObject();
    }

    @Override
    public PlayerDisplaySettings mergeFrom(final JsonSource input) throws IOException {
      if (!input.beginObject()) {
        return this;
      }
      while (!input.isAtEnd()) {
        switch (input.readFieldHash()) {
          case 1413221105: {
            if (input.isAtField(FieldNames.gGODAIOHJIF)) {
              if (!input.trySkipNullValue()) {
                gGODAIOHJIF = input.readBool();
                bitField0_ |= 0x00000001;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -1179279854: {
            if (input.isAtField(FieldNames.hHCGDEOCOMI)) {
              if (!input.trySkipNullValue()) {
                hHCGDEOCOMI = input.readBool();
                bitField0_ |= 0x00000002;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -69431971: {
            if (input.isAtField(FieldNames.bKPACECKIIA)) {
              if (!input.trySkipNullValue()) {
                bKPACECKIIA = input.readBool();
                bitField0_ |= 0x00000004;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case -274115754: {
            if (input.isAtField(FieldNames.kMJDMEFGCCK)) {
              if (!input.trySkipNullValue()) {
                kMJDMEFGCCK = input.readBool();
                bitField0_ |= 0x00000008;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          case 1504591161: {
            if (input.isAtField(FieldNames.jCNINCCCAKL)) {
              if (!input.trySkipNullValue()) {
                jCNINCCCAKL = input.readBool();
                bitField0_ |= 0x00000010;
              }
            } else {
              input.skipUnknownField();
            }
            break;
          }
          default: {
            input.skipUnknownField();
            break;
          }
        }
      }
      input.endObject();
      return this;
    }

    @Override
    public PlayerDisplaySettings clone() {
      return new PlayerDisplaySettings().copyFrom(this);
    }

    @Override
    public boolean isEmpty() {
      return ((bitField0_) == 0);
    }

    public static PlayerDisplaySettings parseFrom(final byte[] data) throws
        InvalidProtocolBufferException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), data).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final ProtoSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    public static PlayerDisplaySettings parseFrom(final JsonSource input) throws IOException {
      return ProtoMessage.mergeFrom(new PlayerDisplaySettings(), input).checkInitialized();
    }

    /**
     * @return factory for creating PlayerDisplaySettings messages
     */
    public static MessageFactory<PlayerDisplaySettings> getFactory() {
      return PlayerDisplaySettingsFactory.INSTANCE;
    }

    private enum PlayerDisplaySettingsFactory implements MessageFactory<PlayerDisplaySettings> {
      INSTANCE;

      @Override
      public PlayerDisplaySettings create() {
        return PlayerDisplaySettings.newInstance();
      }
    }

    /**
     * Contains name constants used for serializing JSON
     */
    static class FieldNames {
      static final FieldName gGODAIOHJIF = FieldName.forField("GGODAIOHJIF");

      static final FieldName hHCGDEOCOMI = FieldName.forField("HHCGDEOCOMI");

      static final FieldName bKPACECKIIA = FieldName.forField("BKPACECKIIA");

      static final FieldName kMJDMEFGCCK = FieldName.forField("KMJDMEFGCCK");

      static final FieldName jCNINCCCAKL = FieldName.forField("JCNINCCCAKL");
    }
  }
}
